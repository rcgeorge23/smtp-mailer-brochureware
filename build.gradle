buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
		classpath("org.ajoberstar:gradle-git:1.6.0")
		classpath("commons-io:commons-io:2.4")
		classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
//apply plugin: 'org.ajoberstar.grgit'
//apply plugin: 'org.ajoberstar.github-pages'
//apply plugin: 'org.ajoberstar.release-opinion'

import org.ajoberstar.grgit.Grgit
import org.apache.commons.io.FileUtils

group = 'dockernovinet'

jar {
	baseName = 'smtp-mailer-brochureware'
	version = project.version.toString()
}

repositories {
	jcenter()
	mavenCentral()
}

ext {
	gebVersion = '0.12.2'
	seleniumVersion = '2.53.0'
	chromeDriverVersion = '2.19'
	
	applicationRepositoryName = 'smtp-mailer'
	applicationRepositoryUrl = 'git@github.com:rcgeorge23/smtp-mailer-brochureware.git'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile group: 'org.apache.commons', name: 'commons-email', version: '1.3.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'com.google.guava', name: 'guava', version: '22.0'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-devtools")
	
    compile 'org.slf4j:slf4j-api:1.7.14'
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
	
	testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
		exclude(module: 'commons-logging')
	}
	
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-2'
	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-3'
	testCompile 'com.nagternal:spock-genesis:0.5.0'
	testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testCompile 'junit:junit:4.12'
	testCompile "org.gebish:geb-spock:$gebVersion"
	testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"  
	testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
	testRuntime "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}

bootRun {
	addResources = true
}

task createDockerFile(dependsOn: assemble) { 
	doFirst {
		File dockerFileTemplate = new File('src/main/docker/Dockerfile.template')
		new File("${buildDir}/Dockerfile").text = dockerFileTemplate.text.replace('$JAR_NAME', jar.archiveName)
	}
}

task buildDocker(type: Docker, dependsOn: createDockerFile) {
	push = false
	applicationName = jar.baseName
	dockerfile = file("${buildDir}/Dockerfile")
	tagVersion = "latest"
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
